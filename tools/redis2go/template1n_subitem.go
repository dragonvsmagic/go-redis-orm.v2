package main

const template1nSubitem string = `/// -------------------------------------------------------------------------------
/// THIS FILE IS ORIGINALLY GENERATED BY redis2go.exe.
/// PLEASE DO NOT MODIFY THIS FILE.
/// -------------------------------------------------------------------------------
package {{packagename}}

import (
	{{import_struct_format}}
)

type {{classname}}ItemData struct {
	{{fields_def}}
}

type {{classname}}Item struct {
	SubKey {{sub_key_type}}
	__data {{classname}}ItemData
	__root *{{classname}}
}

func New{{classname}}Item(subKey {{sub_key_type}}, root *{{classname}}) *{{classname}}Item {
	return &{{classname}}Item{
		SubKey: subKey,
		__root: root,
	}
}

{{func_get1n}}

{{func_set1n}}

func (this *{{classname}}Item) Unmarshal(data []byte) error {
	if err := {{struct_format}}.Unmarshal(data, &this.__data); err != nil {
		return err
	}
	return nil
}

func (this *{{classname}}Item) Marshal() ([]byte, error) {
	data, err := {{struct_format}}.Marshal(&this.__data)
	if err != nil {
		return nil, err
	}
	return data, nil
}
`

const get1nFuncString = `func (this *{{classname}}Item) Get{{field_name_upper}}() {{field_type}} {
	return this.__data.{{field_name_upper}}
}`

const set1nFuncString = `func (this *{{classname}}Item) Set{{field_name_upper}}(value {{field_type}}) {
	this.__data.{{field_name_upper}} = value
	this.__root.__dirtyData[this.SubKey] = 1
}`

const get1nFuncStringForStructFiled = `func (this *{{classname}}Item) Get{{field_name_upper}}(mutable bool) *{{field_type}} {
	if mutable {
		this.__root.__dirtyData[this.SubKey] = 1
	}
	return &this.__data.{{field_name_upper}}
}`
